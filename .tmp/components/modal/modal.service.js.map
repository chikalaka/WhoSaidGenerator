{"version":3,"sources":["../../../client/components/modal/modal.service.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,MAAR,CAAe,YAAf,EACG,OADH,CACW,OADX,EACoB,UAAS,UAAT,EAAqB,SAArB,EAAgC;;;;;;;AAOhD,WAAS,SAAT,GAA6D;AAAA,QAA1C,KAA0C,yDAAlC,EAAkC;AAAA,QAA9B,UAA8B,yDAAjB,eAAiB;;AAC3D,QAAI,aAAa,WAAW,IAAX,EAAjB;;AAEA,YAAQ,MAAR,CAAe,UAAf,EAA2B,KAA3B;;AAEA,WAAO,UAAU,IAAV,CAAe;AACpB,mBAAa,6BADO;AAEpB,mBAAa,UAFO;AAGpB,aAAO;AAHa,KAAf,CAAP;AAKD;;;AAGD,SAAO;;;AAGL,aAAS;;;;;;;;AAOP,YAPO,qBAOoB;AAAA,YAApB,GAAoB,yDAAd,QAAQ,IAAM;;;;;;;AAMzB,eAAO,YAAW;AAChB,cAAI,OAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAX;cACE,OAAO,KAAK,KAAL,EADT;cAEE,WAFF;;AAIA,wBAAc,UAAU;AACtB,mBAAO;AACL,2BAAa,IADR;AAEL,qBAAO,gBAFF;AAGL,oBAAM,gDAAgD,IAAhD,GACJ,iBAJG;AAKL,uBAAS,CAAC;AACR,yBAAS,YADD;AAER,sBAAM,QAFE;AAGR,uBAAO,eAAS,CAAT,EAAY;AACjB,8BAAY,KAAZ,CAAkB,CAAlB;AACD;AALO,eAAD,EAMN;AACD,yBAAS,aADR;AAED,sBAAM,QAFL;AAGD,uBAAO,eAAS,CAAT,EAAY;AACjB,8BAAY,OAAZ,CAAoB,CAApB;AACD;AALA,eANM;AALJ;AADe,WAAV,EAoBX,cApBW,CAAd;;AAsBA,sBAAY,MAAZ,CAAmB,IAAnB,CAAwB,UAAS,KAAT,EAAgB;AACtC,gBAAI,KAAJ,CAAU,KAAV,EAAiB,IAAjB;AACD,WAFD;AAGD,SA9BD;AA+BD;AA5CM;AAHJ,GAAP;AAkDD,CAvEH","file":"modal.service.js","sourcesContent":["'use strict';\r\n\r\nangular.module('whoSaidApp')\r\n  .factory('Modal', function($rootScope, $uibModal) {\r\n    /**\r\n     * Opens a modal\r\n     * @param  {Object} scope      - an object to be merged with modal's scope\r\n     * @param  {String} modalClass - (optional) class(es) to be applied to the modal\r\n     * @return {Object}            - the instance $uibModal.open() returns\r\n     */\r\n    function openModal(scope = {}, modalClass = 'modal-default') {\r\n      var modalScope = $rootScope.$new();\r\n\r\n      angular.extend(modalScope, scope);\r\n\r\n      return $uibModal.open({\r\n        templateUrl: 'components/modal/modal.html',\r\n        windowClass: modalClass,\r\n        scope: modalScope\r\n      });\r\n    }\r\n\r\n    // Public API here\r\n    return {\r\n\r\n      /* Confirmation modals */\r\n      confirm: {\r\n\r\n        /**\r\n         * Create a function to open a delete confirmation modal (ex. ng-click='myModalFn(name, arg1, arg2...)')\r\n         * @param  {Function} del - callback, ran when delete is confirmed\r\n         * @return {Function}     - the function to open the modal (ex. myModalFn)\r\n         */\r\n        delete(del = angular.noop) {\r\n          /**\r\n           * Open a delete confirmation modal\r\n           * @param  {String} name   - name or info to show on modal\r\n           * @param  {All}           - any additional args are passed straight to del callback\r\n           */\r\n          return function() {\r\n            var args = Array.prototype.slice.call(arguments),\r\n              name = args.shift(),\r\n              deleteModal;\r\n\r\n            deleteModal = openModal({\r\n              modal: {\r\n                dismissable: true,\r\n                title: 'Confirm Delete',\r\n                html: '<p>Are you sure you want to delete <strong>' + name +\r\n                  '</strong> ?</p>',\r\n                buttons: [{\r\n                  classes: 'btn-danger',\r\n                  text: 'Delete',\r\n                  click: function(e) {\r\n                    deleteModal.close(e);\r\n                  }\r\n                }, {\r\n                  classes: 'btn-default',\r\n                  text: 'Cancel',\r\n                  click: function(e) {\r\n                    deleteModal.dismiss(e);\r\n                  }\r\n                }]\r\n              }\r\n            }, 'modal-danger');\r\n\r\n            deleteModal.result.then(function(event) {\r\n              del.apply(event, args);\r\n            });\r\n          };\r\n        }\r\n      }\r\n    };\r\n  });\r\n"]}